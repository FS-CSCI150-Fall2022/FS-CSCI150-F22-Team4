{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-route_4_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-route_4.entry.js","./node_modules/@ionic/core/dist/esm/theme-7670341c.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, e as createEvent, i as getElement, h, H as Host } from './index-8e692445.js';\r\nimport { c as componentOnReady, q as debounce } from './helpers-2914b3be.js';\r\nimport { b as getIonMode } from './ionic-global-c95cf239.js';\r\nimport { o as openURL, c as createColorClasses } from './theme-7670341c.js';\r\n\r\nconst Route = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionRouteDataChanged = createEvent(this, \"ionRouteDataChanged\", 7);\r\n    /**\r\n     * Relative path that needs to match in order for this route to apply.\r\n     *\r\n     * Accepts paths similar to expressjs so that you can define parameters\r\n     * in the url /foo/:bar where bar would be available in incoming props.\r\n     */\r\n    this.url = '';\r\n  }\r\n  onUpdate(newValue) {\r\n    this.ionRouteDataChanged.emit(newValue);\r\n  }\r\n  onComponentProps(newValue, oldValue) {\r\n    if (newValue === oldValue) {\r\n      return;\r\n    }\r\n    const keys1 = newValue ? Object.keys(newValue) : [];\r\n    const keys2 = oldValue ? Object.keys(oldValue) : [];\r\n    if (keys1.length !== keys2.length) {\r\n      this.onUpdate(newValue);\r\n      return;\r\n    }\r\n    for (const key of keys1) {\r\n      if (newValue[key] !== oldValue[key]) {\r\n        this.onUpdate(newValue);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  connectedCallback() {\r\n    this.ionRouteDataChanged.emit();\r\n  }\r\n  static get watchers() { return {\r\n    \"url\": [\"onUpdate\"],\r\n    \"component\": [\"onUpdate\"],\r\n    \"componentProps\": [\"onComponentProps\"]\r\n  }; }\r\n};\r\n\r\nconst RouteRedirect = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionRouteRedirectChanged = createEvent(this, \"ionRouteRedirectChanged\", 7);\r\n  }\r\n  propDidChange() {\r\n    this.ionRouteRedirectChanged.emit();\r\n  }\r\n  connectedCallback() {\r\n    this.ionRouteRedirectChanged.emit();\r\n  }\r\n  static get watchers() { return {\r\n    \"from\": [\"propDidChange\"],\r\n    \"to\": [\"propDidChange\"]\r\n  }; }\r\n};\r\n\r\nconst ROUTER_INTENT_NONE = 'root';\r\nconst ROUTER_INTENT_FORWARD = 'forward';\r\nconst ROUTER_INTENT_BACK = 'back';\r\n\r\n/** Join the non empty segments with \"/\". */\r\nconst generatePath = (segments) => {\r\n  const path = segments.filter((s) => s.length > 0).join('/');\r\n  return '/' + path;\r\n};\r\nconst generateUrl = (segments, useHash, queryString) => {\r\n  let url = generatePath(segments);\r\n  if (useHash) {\r\n    url = '#' + url;\r\n  }\r\n  if (queryString !== undefined) {\r\n    url += '?' + queryString;\r\n  }\r\n  return url;\r\n};\r\nconst writeSegments = (history, root, useHash, segments, direction, state, queryString) => {\r\n  const url = generateUrl([...parsePath(root).segments, ...segments], useHash, queryString);\r\n  if (direction === ROUTER_INTENT_FORWARD) {\r\n    history.pushState(state, '', url);\r\n  }\r\n  else {\r\n    history.replaceState(state, '', url);\r\n  }\r\n};\r\n/**\r\n * Transforms a chain to a list of segments.\r\n *\r\n * Notes:\r\n * - parameter segments of the form :param are replaced with their value,\r\n * - null is returned when a value is missing for any parameter segment.\r\n */\r\nconst chainToSegments = (chain) => {\r\n  const segments = [];\r\n  for (const route of chain) {\r\n    for (const segment of route.segments) {\r\n      if (segment[0] === ':') {\r\n        const param = route.params && route.params[segment.slice(1)];\r\n        if (!param) {\r\n          return null;\r\n        }\r\n        segments.push(param);\r\n      }\r\n      else if (segment !== '') {\r\n        segments.push(segment);\r\n      }\r\n    }\r\n  }\r\n  return segments;\r\n};\r\n/**\r\n * Removes the prefix segments from the path segments.\r\n *\r\n * Return:\r\n * - null when the path segments do not start with the passed prefix,\r\n * - the path segments after the prefix otherwise.\r\n */\r\nconst removePrefix = (prefix, segments) => {\r\n  if (prefix.length > segments.length) {\r\n    return null;\r\n  }\r\n  if (prefix.length <= 1 && prefix[0] === '') {\r\n    return segments;\r\n  }\r\n  for (let i = 0; i < prefix.length; i++) {\r\n    if (prefix[i] !== segments[i]) {\r\n      return null;\r\n    }\r\n  }\r\n  if (segments.length === prefix.length) {\r\n    return [''];\r\n  }\r\n  return segments.slice(prefix.length);\r\n};\r\nconst readSegments = (loc, root, useHash) => {\r\n  const prefix = parsePath(root).segments;\r\n  const pathname = useHash ? loc.hash.slice(1) : loc.pathname;\r\n  const segments = parsePath(pathname).segments;\r\n  return removePrefix(prefix, segments);\r\n};\r\n/**\r\n * Parses the path to:\r\n * - segments an array of '/' separated parts,\r\n * - queryString (undefined when no query string).\r\n */\r\nconst parsePath = (path) => {\r\n  let segments = [''];\r\n  let queryString;\r\n  if (path != null) {\r\n    const qsStart = path.indexOf('?');\r\n    if (qsStart > -1) {\r\n      queryString = path.substring(qsStart + 1);\r\n      path = path.substring(0, qsStart);\r\n    }\r\n    segments = path\r\n      .split('/')\r\n      .map((s) => s.trim())\r\n      .filter((s) => s.length > 0);\r\n    if (segments.length === 0) {\r\n      segments = [''];\r\n    }\r\n  }\r\n  return { segments, queryString };\r\n};\r\n\r\nconst printRoutes = (routes) => {\r\n  console.group(`[ion-core] ROUTES[${routes.length}]`);\r\n  for (const chain of routes) {\r\n    const segments = [];\r\n    chain.forEach((r) => segments.push(...r.segments));\r\n    const ids = chain.map((r) => r.id);\r\n    console.debug(`%c ${generatePath(segments)}`, 'font-weight: bold; padding-left: 20px', '=>\\t', `(${ids.join(', ')})`);\r\n  }\r\n  console.groupEnd();\r\n};\r\nconst printRedirects = (redirects) => {\r\n  console.group(`[ion-core] REDIRECTS[${redirects.length}]`);\r\n  for (const redirect of redirects) {\r\n    if (redirect.to) {\r\n      console.debug('FROM: ', `$c ${generatePath(redirect.from)}`, 'font-weight: bold', ' TO: ', `$c ${generatePath(redirect.to.segments)}`, 'font-weight: bold');\r\n    }\r\n  }\r\n  console.groupEnd();\r\n};\r\n\r\n/**\r\n * Activates the passed route chain.\r\n *\r\n * There must be exactly one outlet per route entry in the chain.\r\n *\r\n * The methods calls setRouteId on each of the outlet with the corresponding route entry in the chain.\r\n * setRouteId will create or select the view in the outlet.\r\n */\r\nconst writeNavState = async (root, chain, direction, index, changed = false, animation) => {\r\n  try {\r\n    // find next navigation outlet in the DOM\r\n    const outlet = searchNavNode(root);\r\n    // make sure we can continue interacting the DOM, otherwise abort\r\n    if (index >= chain.length || !outlet) {\r\n      return changed;\r\n    }\r\n    await new Promise((resolve) => componentOnReady(outlet, resolve));\r\n    const route = chain[index];\r\n    const result = await outlet.setRouteId(route.id, route.params, direction, animation);\r\n    // if the outlet changed the page, reset navigation to neutral (no direction)\r\n    // this means nested outlets will not animate\r\n    if (result.changed) {\r\n      direction = ROUTER_INTENT_NONE;\r\n      changed = true;\r\n    }\r\n    // recursively set nested outlets\r\n    changed = await writeNavState(result.element, chain, direction, index + 1, changed, animation);\r\n    // once all nested outlets are visible let's make the parent visible too,\r\n    // using markVisible prevents flickering\r\n    if (result.markVisible) {\r\n      await result.markVisible();\r\n    }\r\n    return changed;\r\n  }\r\n  catch (e) {\r\n    console.error(e);\r\n    return false;\r\n  }\r\n};\r\n/**\r\n * Recursively walks the outlet in the DOM.\r\n *\r\n * The function returns a list of RouteID corresponding to each of the outlet and the last outlet without a RouteID.\r\n */\r\nconst readNavState = async (root) => {\r\n  const ids = [];\r\n  let outlet;\r\n  let node = root;\r\n  // eslint-disable-next-line no-cond-assign\r\n  while ((outlet = searchNavNode(node))) {\r\n    const id = await outlet.getRouteId();\r\n    if (id) {\r\n      node = id.element;\r\n      id.element = undefined;\r\n      ids.push(id);\r\n    }\r\n    else {\r\n      break;\r\n    }\r\n  }\r\n  return { ids, outlet };\r\n};\r\nconst waitUntilNavNode = () => {\r\n  if (searchNavNode(document.body)) {\r\n    return Promise.resolve();\r\n  }\r\n  return new Promise((resolve) => {\r\n    window.addEventListener('ionNavWillLoad', () => resolve(), { once: true });\r\n  });\r\n};\r\n/** Selector for all the outlets supported by the router. */\r\nconst OUTLET_SELECTOR = ':not([no-router]) ion-nav, :not([no-router]) ion-tabs, :not([no-router]) ion-router-outlet';\r\nconst searchNavNode = (root) => {\r\n  if (!root) {\r\n    return undefined;\r\n  }\r\n  if (root.matches(OUTLET_SELECTOR)) {\r\n    return root;\r\n  }\r\n  const outlet = root.querySelector(OUTLET_SELECTOR);\r\n  return outlet !== null && outlet !== void 0 ? outlet : undefined;\r\n};\r\n\r\n/**\r\n * Returns whether the given redirect matches the given path segments.\r\n *\r\n * A redirect matches when the segments of the path and redirect.from are equal.\r\n * Note that segments are only checked until redirect.from contains a '*' which matches any path segment.\r\n * The path ['some', 'path', 'to', 'page'] matches both ['some', 'path', 'to', 'page'] and ['some', 'path', '*'].\r\n */\r\nconst matchesRedirect = (segments, redirect) => {\r\n  const { from, to } = redirect;\r\n  if (to === undefined) {\r\n    return false;\r\n  }\r\n  if (from.length > segments.length) {\r\n    return false;\r\n  }\r\n  for (let i = 0; i < from.length; i++) {\r\n    const expected = from[i];\r\n    if (expected === '*') {\r\n      return true;\r\n    }\r\n    if (expected !== segments[i]) {\r\n      return false;\r\n    }\r\n  }\r\n  return from.length === segments.length;\r\n};\r\n/** Returns the first redirect matching the path segments or undefined when no match found. */\r\nconst findRouteRedirect = (segments, redirects) => {\r\n  return redirects.find((redirect) => matchesRedirect(segments, redirect));\r\n};\r\nconst matchesIDs = (ids, chain) => {\r\n  const len = Math.min(ids.length, chain.length);\r\n  let score = 0;\r\n  for (let i = 0; i < len; i++) {\r\n    const routeId = ids[i];\r\n    const routeChain = chain[i];\r\n    // Skip results where the route id does not match the chain at the same index\r\n    if (routeId.id.toLowerCase() !== routeChain.id) {\r\n      break;\r\n    }\r\n    if (routeId.params) {\r\n      const routeIdParams = Object.keys(routeId.params);\r\n      // Only compare routes with the chain that have the same number of parameters.\r\n      if (routeIdParams.length === routeChain.segments.length) {\r\n        // Maps the route's params into a path based on the path variable names,\r\n        // to compare against the route chain format.\r\n        //\r\n        // Before:\r\n        // ```ts\r\n        // {\r\n        //  params: {\r\n        //    s1: 'a',\r\n        //    s2: 'b'\r\n        //  }\r\n        // }\r\n        // ```\r\n        //\r\n        // After:\r\n        // ```ts\r\n        // [':s1',':s2']\r\n        // ```\r\n        //\r\n        const pathWithParams = routeIdParams.map((key) => `:${key}`);\r\n        for (let j = 0; j < pathWithParams.length; j++) {\r\n          // Skip results where the path variable is not a match\r\n          if (pathWithParams[j].toLowerCase() !== routeChain.segments[j]) {\r\n            break;\r\n          }\r\n          // Weight path matches for the same index higher.\r\n          score++;\r\n        }\r\n      }\r\n    }\r\n    // Weight id matches\r\n    score++;\r\n  }\r\n  return score;\r\n};\r\n/**\r\n * Matches the segments against the chain.\r\n *\r\n * Returns:\r\n * - null when there is no match,\r\n * - a chain with the params properties updated with the parameter segments on match.\r\n */\r\nconst matchesSegments = (segments, chain) => {\r\n  const inputSegments = new RouterSegments(segments);\r\n  let matchesDefault = false;\r\n  let allparams;\r\n  for (let i = 0; i < chain.length; i++) {\r\n    const chainSegments = chain[i].segments;\r\n    if (chainSegments[0] === '') {\r\n      matchesDefault = true;\r\n    }\r\n    else {\r\n      for (const segment of chainSegments) {\r\n        const data = inputSegments.next();\r\n        // data param\r\n        if (segment[0] === ':') {\r\n          if (data === '') {\r\n            return null;\r\n          }\r\n          allparams = allparams || [];\r\n          const params = allparams[i] || (allparams[i] = {});\r\n          params[segment.slice(1)] = data;\r\n        }\r\n        else if (data !== segment) {\r\n          return null;\r\n        }\r\n      }\r\n      matchesDefault = false;\r\n    }\r\n  }\r\n  const matches = matchesDefault ? matchesDefault === (inputSegments.next() === '') : true;\r\n  if (!matches) {\r\n    return null;\r\n  }\r\n  if (allparams) {\r\n    return chain.map((route, i) => ({\r\n      id: route.id,\r\n      segments: route.segments,\r\n      params: mergeParams(route.params, allparams[i]),\r\n      beforeEnter: route.beforeEnter,\r\n      beforeLeave: route.beforeLeave,\r\n    }));\r\n  }\r\n  return chain;\r\n};\r\n/**\r\n * Merges the route parameter objects.\r\n * Returns undefined when both parameters are undefined.\r\n */\r\nconst mergeParams = (a, b) => {\r\n  return a || b ? Object.assign(Object.assign({}, a), b) : undefined;\r\n};\r\n/**\r\n * Finds the best match for the ids in the chains.\r\n *\r\n * Returns the best match or null when no match is found.\r\n * When a chain is returned the parameters are updated from the RouteIDs.\r\n * That is they contain both the componentProps of the <ion-route> and the parameter segment.\r\n */\r\nconst findChainForIDs = (ids, chains) => {\r\n  let match = null;\r\n  let maxMatches = 0;\r\n  for (const chain of chains) {\r\n    const score = matchesIDs(ids, chain);\r\n    if (score > maxMatches) {\r\n      match = chain;\r\n      maxMatches = score;\r\n    }\r\n  }\r\n  if (match) {\r\n    return match.map((route, i) => {\r\n      var _a;\r\n      return ({\r\n        id: route.id,\r\n        segments: route.segments,\r\n        params: mergeParams(route.params, (_a = ids[i]) === null || _a === void 0 ? void 0 : _a.params),\r\n      });\r\n    });\r\n  }\r\n  return null;\r\n};\r\n/**\r\n * Finds the best match for the segments in the chains.\r\n *\r\n * Returns the best match or null when no match is found.\r\n * When a chain is returned the parameters are updated from the segments.\r\n * That is they contain both the componentProps of the <ion-route> and the parameter segments.\r\n */\r\nconst findChainForSegments = (segments, chains) => {\r\n  let match = null;\r\n  let bestScore = 0;\r\n  for (const chain of chains) {\r\n    const matchedChain = matchesSegments(segments, chain);\r\n    if (matchedChain !== null) {\r\n      const score = computePriority(matchedChain);\r\n      if (score > bestScore) {\r\n        bestScore = score;\r\n        match = matchedChain;\r\n      }\r\n    }\r\n  }\r\n  return match;\r\n};\r\n/**\r\n * Computes the priority of a chain.\r\n *\r\n * Parameter segments are given a lower priority over fixed segments.\r\n *\r\n * Considering the following 2 chains matching the path /path/to/page:\r\n * - /path/to/:where\r\n * - /path/to/page\r\n *\r\n * The second one will be given a higher priority because \"page\" is a fixed segment (vs \":where\", a parameter segment).\r\n */\r\nconst computePriority = (chain) => {\r\n  let score = 1;\r\n  let level = 1;\r\n  for (const route of chain) {\r\n    for (const segment of route.segments) {\r\n      if (segment[0] === ':') {\r\n        score += Math.pow(1, level);\r\n      }\r\n      else if (segment !== '') {\r\n        score += Math.pow(2, level);\r\n      }\r\n      level++;\r\n    }\r\n  }\r\n  return score;\r\n};\r\nclass RouterSegments {\r\n  constructor(segments) {\r\n    this.segments = segments.slice();\r\n  }\r\n  next() {\r\n    if (this.segments.length > 0) {\r\n      return this.segments.shift();\r\n    }\r\n    return '';\r\n  }\r\n}\r\n\r\nconst readProp = (el, prop) => {\r\n  if (prop in el) {\r\n    return el[prop];\r\n  }\r\n  if (el.hasAttribute(prop)) {\r\n    return el.getAttribute(prop);\r\n  }\r\n  return null;\r\n};\r\n/**\r\n * Extracts the redirects (that is <ion-route-redirect> elements inside the root).\r\n *\r\n * The redirects are returned as a list of RouteRedirect.\r\n */\r\nconst readRedirects = (root) => {\r\n  return Array.from(root.children)\r\n    .filter((el) => el.tagName === 'ION-ROUTE-REDIRECT')\r\n    .map((el) => {\r\n    const to = readProp(el, 'to');\r\n    return {\r\n      from: parsePath(readProp(el, 'from')).segments,\r\n      to: to == null ? undefined : parsePath(to),\r\n    };\r\n  });\r\n};\r\n/**\r\n * Extracts all the routes (that is <ion-route> elements inside the root).\r\n *\r\n * The routes are returned as a list of chains - the flattened tree.\r\n */\r\nconst readRoutes = (root) => {\r\n  return flattenRouterTree(readRouteNodes(root));\r\n};\r\n/**\r\n * Reads the route nodes as a tree modeled after the DOM tree of <ion-route> elements.\r\n *\r\n * Note: routes without a component are ignored together with their children.\r\n */\r\nconst readRouteNodes = (node) => {\r\n  return Array.from(node.children)\r\n    .filter((el) => el.tagName === 'ION-ROUTE' && el.component)\r\n    .map((el) => {\r\n    const component = readProp(el, 'component');\r\n    return {\r\n      segments: parsePath(readProp(el, 'url')).segments,\r\n      id: component.toLowerCase(),\r\n      params: el.componentProps,\r\n      beforeLeave: el.beforeLeave,\r\n      beforeEnter: el.beforeEnter,\r\n      children: readRouteNodes(el),\r\n    };\r\n  });\r\n};\r\n/**\r\n * Flattens a RouterTree in a list of chains.\r\n *\r\n * Each chain represents a path from the root node to a terminal node.\r\n */\r\nconst flattenRouterTree = (nodes) => {\r\n  const chains = [];\r\n  for (const node of nodes) {\r\n    flattenNode([], chains, node);\r\n  }\r\n  return chains;\r\n};\r\n/** Flattens a route node recursively and push each branch to the chains list. */\r\nconst flattenNode = (chain, chains, node) => {\r\n  chain = [\r\n    ...chain,\r\n    {\r\n      id: node.id,\r\n      segments: node.segments,\r\n      params: node.params,\r\n      beforeLeave: node.beforeLeave,\r\n      beforeEnter: node.beforeEnter,\r\n    },\r\n  ];\r\n  if (node.children.length === 0) {\r\n    chains.push(chain);\r\n    return;\r\n  }\r\n  for (const child of node.children) {\r\n    flattenNode(chain, chains, child);\r\n  }\r\n};\r\n\r\nconst Router = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionRouteWillChange = createEvent(this, \"ionRouteWillChange\", 7);\r\n    this.ionRouteDidChange = createEvent(this, \"ionRouteDidChange\", 7);\r\n    this.previousPath = null;\r\n    this.busy = false;\r\n    this.state = 0;\r\n    this.lastState = 0;\r\n    /**\r\n     * The root path to use when matching URLs. By default, this is set to \"/\", but you can specify\r\n     * an alternate prefix for all URL paths.\r\n     */\r\n    this.root = '/';\r\n    /**\r\n     * The router can work in two \"modes\":\r\n     * - With hash: `/index.html#/path/to/page`\r\n     * - Without hash: `/path/to/page`\r\n     *\r\n     * Using one or another might depend in the requirements of your app and/or where it's deployed.\r\n     *\r\n     * Usually \"hash-less\" navigation works better for SEO and it's more user friendly too, but it might\r\n     * requires additional server-side configuration in order to properly work.\r\n     *\r\n     * On the other side hash-navigation is much easier to deploy, it even works over the file protocol.\r\n     *\r\n     * By default, this property is `true`, change to `false` to allow hash-less URLs.\r\n     */\r\n    this.useHash = true;\r\n  }\r\n  async componentWillLoad() {\r\n    await waitUntilNavNode();\r\n    const canProceed = await this.runGuards(this.getSegments());\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        const { redirect } = canProceed;\r\n        const path = parsePath(redirect);\r\n        this.setSegments(path.segments, ROUTER_INTENT_NONE, path.queryString);\r\n        await this.writeNavStateRoot(path.segments, ROUTER_INTENT_NONE);\r\n      }\r\n    }\r\n    else {\r\n      await this.onRoutesChanged();\r\n    }\r\n  }\r\n  componentDidLoad() {\r\n    window.addEventListener('ionRouteRedirectChanged', debounce(this.onRedirectChanged.bind(this), 10));\r\n    window.addEventListener('ionRouteDataChanged', debounce(this.onRoutesChanged.bind(this), 100));\r\n  }\r\n  async onPopState() {\r\n    const direction = this.historyDirection();\r\n    let segments = this.getSegments();\r\n    const canProceed = await this.runGuards(segments);\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        segments = parsePath(canProceed.redirect).segments;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    return this.writeNavStateRoot(segments, direction);\r\n  }\r\n  onBackButton(ev) {\r\n    ev.detail.register(0, (processNextHandler) => {\r\n      this.back();\r\n      processNextHandler();\r\n    });\r\n  }\r\n  /** @internal */\r\n  async canTransition() {\r\n    const canProceed = await this.runGuards();\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        return canProceed.redirect;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   * Navigate to the specified path.\r\n   *\r\n   * @param path The path to navigate to.\r\n   * @param direction The direction of the animation. Defaults to `\"forward\"`.\r\n   */\r\n  async push(path, direction = 'forward', animation) {\r\n    var _a;\r\n    if (path.startsWith('.')) {\r\n      const currentPath = (_a = this.previousPath) !== null && _a !== void 0 ? _a : '/';\r\n      // Convert currentPath to an URL by pre-pending a protocol and a host to resolve the relative path.\r\n      const url = new URL(path, `https://host/${currentPath}`);\r\n      path = url.pathname + url.search;\r\n    }\r\n    let parsedPath = parsePath(path);\r\n    const canProceed = await this.runGuards(parsedPath.segments);\r\n    if (canProceed !== true) {\r\n      if (typeof canProceed === 'object') {\r\n        parsedPath = parsePath(canProceed.redirect);\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    this.setSegments(parsedPath.segments, direction, parsedPath.queryString);\r\n    return this.writeNavStateRoot(parsedPath.segments, direction, animation);\r\n  }\r\n  /** Go back to previous page in the window.history. */\r\n  back() {\r\n    window.history.back();\r\n    return Promise.resolve(this.waitPromise);\r\n  }\r\n  /** @internal */\r\n  async printDebug() {\r\n    printRoutes(readRoutes(this.el));\r\n    printRedirects(readRedirects(this.el));\r\n  }\r\n  /** @internal */\r\n  async navChanged(direction) {\r\n    if (this.busy) {\r\n      console.warn('[ion-router] router is busy, navChanged was cancelled');\r\n      return false;\r\n    }\r\n    const { ids, outlet } = await readNavState(window.document.body);\r\n    const routes = readRoutes(this.el);\r\n    const chain = findChainForIDs(ids, routes);\r\n    if (!chain) {\r\n      console.warn('[ion-router] no matching URL for ', ids.map((i) => i.id));\r\n      return false;\r\n    }\r\n    const segments = chainToSegments(chain);\r\n    if (!segments) {\r\n      console.warn('[ion-router] router could not match path because some required param is missing');\r\n      return false;\r\n    }\r\n    this.setSegments(segments, direction);\r\n    await this.safeWriteNavState(outlet, chain, ROUTER_INTENT_NONE, segments, null, ids.length);\r\n    return true;\r\n  }\r\n  /** This handler gets called when a `ion-route-redirect` component is added to the DOM or if the from or to property of such node changes. */\r\n  onRedirectChanged() {\r\n    const segments = this.getSegments();\r\n    if (segments && findRouteRedirect(segments, readRedirects(this.el))) {\r\n      this.writeNavStateRoot(segments, ROUTER_INTENT_NONE);\r\n    }\r\n  }\r\n  /** This handler gets called when a `ion-route` component is added to the DOM or if the from or to property of such node changes. */\r\n  onRoutesChanged() {\r\n    return this.writeNavStateRoot(this.getSegments(), ROUTER_INTENT_NONE);\r\n  }\r\n  historyDirection() {\r\n    var _a;\r\n    const win = window;\r\n    if (win.history.state === null) {\r\n      this.state++;\r\n      win.history.replaceState(this.state, win.document.title, (_a = win.document.location) === null || _a === void 0 ? void 0 : _a.href);\r\n    }\r\n    const state = win.history.state;\r\n    const lastState = this.lastState;\r\n    this.lastState = state;\r\n    if (state > lastState || (state >= lastState && lastState > 0)) {\r\n      return ROUTER_INTENT_FORWARD;\r\n    }\r\n    if (state < lastState) {\r\n      return ROUTER_INTENT_BACK;\r\n    }\r\n    return ROUTER_INTENT_NONE;\r\n  }\r\n  async writeNavStateRoot(segments, direction, animation) {\r\n    if (!segments) {\r\n      console.error('[ion-router] URL is not part of the routing set');\r\n      return false;\r\n    }\r\n    // lookup redirect rule\r\n    const redirects = readRedirects(this.el);\r\n    const redirect = findRouteRedirect(segments, redirects);\r\n    let redirectFrom = null;\r\n    if (redirect) {\r\n      const { segments: toSegments, queryString } = redirect.to;\r\n      this.setSegments(toSegments, direction, queryString);\r\n      redirectFrom = redirect.from;\r\n      segments = toSegments;\r\n    }\r\n    // lookup route chain\r\n    const routes = readRoutes(this.el);\r\n    const chain = findChainForSegments(segments, routes);\r\n    if (!chain) {\r\n      console.error('[ion-router] the path does not match any route');\r\n      return false;\r\n    }\r\n    // write DOM give\r\n    return this.safeWriteNavState(document.body, chain, direction, segments, redirectFrom, 0, animation);\r\n  }\r\n  async safeWriteNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\r\n    const unlock = await this.lock();\r\n    let changed = false;\r\n    try {\r\n      changed = await this.writeNavState(node, chain, direction, segments, redirectFrom, index, animation);\r\n    }\r\n    catch (e) {\r\n      console.error(e);\r\n    }\r\n    unlock();\r\n    return changed;\r\n  }\r\n  async lock() {\r\n    const p = this.waitPromise;\r\n    let resolve;\r\n    this.waitPromise = new Promise((r) => (resolve = r));\r\n    if (p !== undefined) {\r\n      await p;\r\n    }\r\n    return resolve;\r\n  }\r\n  /**\r\n   * Executes the beforeLeave hook of the source route and the beforeEnter hook of the target route if they exist.\r\n   *\r\n   * When the beforeLeave hook does not return true (to allow navigating) then that value is returned early and the beforeEnter is executed.\r\n   * Otherwise the beforeEnterHook hook of the target route is executed.\r\n   */\r\n  async runGuards(to = this.getSegments(), from) {\r\n    if (from === undefined) {\r\n      from = parsePath(this.previousPath).segments;\r\n    }\r\n    if (!to || !from) {\r\n      return true;\r\n    }\r\n    const routes = readRoutes(this.el);\r\n    const fromChain = findChainForSegments(from, routes);\r\n    const beforeLeaveHook = fromChain && fromChain[fromChain.length - 1].beforeLeave;\r\n    const canLeave = beforeLeaveHook ? await beforeLeaveHook() : true;\r\n    if (canLeave === false || typeof canLeave === 'object') {\r\n      return canLeave;\r\n    }\r\n    const toChain = findChainForSegments(to, routes);\r\n    const beforeEnterHook = toChain && toChain[toChain.length - 1].beforeEnter;\r\n    return beforeEnterHook ? beforeEnterHook() : true;\r\n  }\r\n  async writeNavState(node, chain, direction, segments, redirectFrom, index = 0, animation) {\r\n    if (this.busy) {\r\n      console.warn('[ion-router] router is busy, transition was cancelled');\r\n      return false;\r\n    }\r\n    this.busy = true;\r\n    // generate route event and emit will change\r\n    const routeEvent = this.routeChangeEvent(segments, redirectFrom);\r\n    if (routeEvent) {\r\n      this.ionRouteWillChange.emit(routeEvent);\r\n    }\r\n    const changed = await writeNavState(node, chain, direction, index, false, animation);\r\n    this.busy = false;\r\n    // emit did change\r\n    if (routeEvent) {\r\n      this.ionRouteDidChange.emit(routeEvent);\r\n    }\r\n    return changed;\r\n  }\r\n  setSegments(segments, direction, queryString) {\r\n    this.state++;\r\n    writeSegments(window.history, this.root, this.useHash, segments, direction, this.state, queryString);\r\n  }\r\n  getSegments() {\r\n    return readSegments(window.location, this.root, this.useHash);\r\n  }\r\n  routeChangeEvent(toSegments, redirectFromSegments) {\r\n    const from = this.previousPath;\r\n    const to = generatePath(toSegments);\r\n    this.previousPath = to;\r\n    if (to === from) {\r\n      return null;\r\n    }\r\n    const redirectedFrom = redirectFromSegments ? generatePath(redirectFromSegments) : null;\r\n    return {\r\n      from,\r\n      redirectedFrom,\r\n      to,\r\n    };\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\n\r\nconst routerLinkCss = \":host{--background:transparent;--color:var(--ion-color-primary, #3880ff);background:var(--background);color:var(--color)}:host(.ion-color){color:var(--ion-color-base)}a{font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit}\";\r\n\r\nconst RouterLink = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * When using a router, it specifies the transition direction when navigating to\r\n     * another page using `href`.\r\n     */\r\n    this.routerDirection = 'forward';\r\n    this.onClick = (ev) => {\r\n      openURL(this.href, ev, this.routerDirection, this.routerAnimation);\r\n    };\r\n  }\r\n  render() {\r\n    const mode = getIonMode(this);\r\n    const attrs = {\r\n      href: this.href,\r\n      rel: this.rel,\r\n      target: this.target,\r\n    };\r\n    return (h(Host, { onClick: this.onClick, class: createColorClasses(this.color, {\r\n        [mode]: true,\r\n        'ion-activatable': true,\r\n      }) }, h(\"a\", Object.assign({}, attrs), h(\"slot\", null))));\r\n  }\r\n};\r\nRouterLink.style = routerLinkCss;\r\n\r\nexport { Route as ion_route, RouteRedirect as ion_route_redirect, Router as ion_router, RouterLink as ion_router_link };\r\n","/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nconst hostContext = (selector, el) => {\r\n  return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color, cssClassMap) => {\r\n  return typeof color === 'string' && color.length > 0\r\n    ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\r\n};\r\nconst getClassList = (classes) => {\r\n  if (classes !== undefined) {\r\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n    return array\r\n      .filter((c) => c != null)\r\n      .map((c) => c.trim())\r\n      .filter((c) => c !== '');\r\n  }\r\n  return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n  const map = {};\r\n  getClassList(classes).forEach((c) => (map[c] = true));\r\n  return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction, animation) => {\r\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n    const router = document.querySelector('ion-router');\r\n    if (router) {\r\n      if (ev != null) {\r\n        ev.preventDefault();\r\n      }\r\n      return router.push(url, direction, animation);\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\r\n"],"names":["r","registerInstance","e","createEvent","i","getElement","h","H","Host","c","componentOnReady","q","debounce","b","getIonMode","o","openURL","createColorClasses","Route","constructor","hostRef","ionRouteDataChanged","url","onUpdate","newValue","emit","onComponentProps","oldValue","keys1","Object","keys","keys2","length","key","connectedCallback","watchers","RouteRedirect","ionRouteRedirectChanged","propDidChange","ROUTER_INTENT_NONE","ROUTER_INTENT_FORWARD","ROUTER_INTENT_BACK","generatePath","segments","path","filter","s","join","generateUrl","useHash","queryString","undefined","writeSegments","history","root","direction","state","parsePath","pushState","replaceState","chainToSegments","chain","route","segment","param","params","slice","push","removePrefix","prefix","readSegments","loc","pathname","hash","qsStart","indexOf","substring","split","map","trim","printRoutes","routes","console","group","forEach","ids","id","debug","groupEnd","printRedirects","redirects","redirect","to","from","writeNavState","index","changed","animation","outlet","searchNavNode","Promise","resolve","result","setRouteId","element","markVisible","error","readNavState","node","getRouteId","waitUntilNavNode","document","body","window","addEventListener","once","OUTLET_SELECTOR","matches","querySelector","matchesRedirect","expected","findRouteRedirect","find","matchesIDs","len","Math","min","score","routeId","routeChain","toLowerCase","routeIdParams","pathWithParams","j","matchesSegments","inputSegments","RouterSegments","matchesDefault","allparams","chainSegments","data","next","mergeParams","beforeEnter","beforeLeave","a","assign","findChainForIDs","chains","match","maxMatches","_a","findChainForSegments","bestScore","matchedChain","computePriority","level","pow","shift","readProp","el","prop","hasAttribute","getAttribute","readRedirects","Array","children","tagName","readRoutes","flattenRouterTree","readRouteNodes","component","componentProps","nodes","flattenNode","child","Router","ionRouteWillChange","ionRouteDidChange","previousPath","busy","lastState","componentWillLoad","canProceed","runGuards","getSegments","setSegments","writeNavStateRoot","onRoutesChanged","componentDidLoad","onRedirectChanged","bind","onPopState","historyDirection","onBackButton","ev","detail","register","processNextHandler","back","canTransition","startsWith","currentPath","URL","search","parsedPath","waitPromise","printDebug","navChanged","warn","safeWriteNavState","win","title","location","href","redirectFrom","toSegments","unlock","lock","p","fromChain","beforeLeaveHook","canLeave","toChain","beforeEnterHook","routeEvent","routeChangeEvent","redirectFromSegments","redirectedFrom","routerLinkCss","RouterLink","routerDirection","onClick","routerAnimation","render","mode","attrs","rel","target","class","color","style","ion_route","ion_route_redirect","ion_router","ion_router_link","hostContext","selector","closest","cssClassMap","getClassList","classes","array","isArray","getClassMap","SCHEME","test","router","preventDefault","g"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}