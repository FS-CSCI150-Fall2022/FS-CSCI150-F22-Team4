{"version":3,"file":"node_modules_ionic_core_dist_esm_ion-nav_2_entry_js.js","mappings":"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","sources":["./node_modules/@ionic/core/dist/esm/ion-nav_2.entry.js"],"sourcesContent":["/*!\r\n * (C) Ionic http://ionicframework.com - MIT License\r\n */\r\nimport { r as registerInstance, e as createEvent, h, i as getElement, H as Host } from './index-8e692445.js';\r\nimport { b as getIonMode, c as config } from './ionic-global-c95cf239.js';\r\nimport { g as getTimeGivenProgression } from './cubic-bezier-c313947a.js';\r\nimport { n as assert, s as shallowEqualStringMap } from './helpers-2914b3be.js';\r\nimport { l as lifecycle, t as transition, s as setPageHidden, d as LIFECYCLE_WILL_UNLOAD, b as LIFECYCLE_WILL_LEAVE, c as LIFECYCLE_DID_LEAVE } from './index-00cb45e0.js';\r\nimport { a as attachComponent } from './framework-delegate-82cc7646.js';\r\n\r\nconst VIEW_STATE_NEW = 1;\r\nconst VIEW_STATE_ATTACHED = 2;\r\nconst VIEW_STATE_DESTROYED = 3;\r\nclass ViewController {\r\n  constructor(component, params) {\r\n    this.component = component;\r\n    this.params = params;\r\n    this.state = VIEW_STATE_NEW;\r\n  }\r\n  async init(container) {\r\n    this.state = VIEW_STATE_ATTACHED;\r\n    if (!this.element) {\r\n      const component = this.component;\r\n      this.element = await attachComponent(this.delegate, container, component, ['ion-page', 'ion-page-invisible'], this.params);\r\n    }\r\n  }\r\n  /**\r\n   * DOM WRITE\r\n   */\r\n  _destroy() {\r\n    assert(this.state !== VIEW_STATE_DESTROYED, 'view state must be ATTACHED');\r\n    const element = this.element;\r\n    if (element) {\r\n      if (this.delegate) {\r\n        this.delegate.removeViewFromDom(element.parentElement, element);\r\n      }\r\n      else {\r\n        element.remove();\r\n      }\r\n    }\r\n    this.nav = undefined;\r\n    this.state = VIEW_STATE_DESTROYED;\r\n  }\r\n}\r\nconst matches = (view, id, params) => {\r\n  if (!view) {\r\n    return false;\r\n  }\r\n  if (view.component !== id) {\r\n    return false;\r\n  }\r\n  return shallowEqualStringMap(view.params, params);\r\n};\r\nconst convertToView = (page, params) => {\r\n  if (!page) {\r\n    return null;\r\n  }\r\n  if (page instanceof ViewController) {\r\n    return page;\r\n  }\r\n  return new ViewController(page, params);\r\n};\r\nconst convertToViews = (pages) => {\r\n  return pages\r\n    .map((page) => {\r\n    if (page instanceof ViewController) {\r\n      return page;\r\n    }\r\n    if ('component' in page) {\r\n      /**\r\n       * TODO Ionic 6:\r\n       * Consider switching to just using `undefined` here\r\n       * as well as on the public interfaces and on\r\n       * `NavComponentWithProps`. Previously `pages` was\r\n       * of type `any[]` so TypeScript did not catch this.\r\n       */\r\n      return convertToView(page.component, page.componentProps === null ? undefined : page.componentProps);\r\n    }\r\n    return convertToView(page, undefined);\r\n  })\r\n    .filter((v) => v !== null);\r\n};\r\n\r\nconst navCss = \":host{left:0;right:0;top:0;bottom:0;position:absolute;contain:layout size style;overflow:hidden;z-index:0}\";\r\n\r\nconst Nav = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    this.ionNavWillLoad = createEvent(this, \"ionNavWillLoad\", 7);\r\n    this.ionNavWillChange = createEvent(this, \"ionNavWillChange\", 3);\r\n    this.ionNavDidChange = createEvent(this, \"ionNavDidChange\", 3);\r\n    this.transInstr = [];\r\n    this.animationEnabled = true;\r\n    this.useRouter = false;\r\n    this.isTransitioning = false;\r\n    this.destroyed = false;\r\n    this.views = [];\r\n    /**\r\n     * If `true`, the nav should animate the transition of components.\r\n     */\r\n    this.animated = true;\r\n  }\r\n  swipeGestureChanged() {\r\n    if (this.gesture) {\r\n      this.gesture.enable(this.swipeGesture === true);\r\n    }\r\n  }\r\n  rootChanged() {\r\n    if (this.root !== undefined) {\r\n      if (!this.useRouter) {\r\n        this.setRoot(this.root, this.rootParams);\r\n      }\r\n    }\r\n  }\r\n  componentWillLoad() {\r\n    this.useRouter = document.querySelector('ion-router') !== null && this.el.closest('[no-router]') === null;\r\n    if (this.swipeGesture === undefined) {\r\n      const mode = getIonMode(this);\r\n      this.swipeGesture = config.getBoolean('swipeBackEnabled', mode === 'ios');\r\n    }\r\n    this.ionNavWillLoad.emit();\r\n  }\r\n  async componentDidLoad() {\r\n    this.rootChanged();\r\n    this.gesture = (await import('./swipe-back-867b0442.js')).createSwipeBackGesture(this.el, this.canStart.bind(this), this.onStart.bind(this), this.onMove.bind(this), this.onEnd.bind(this));\r\n    this.swipeGestureChanged();\r\n  }\r\n  connectedCallback() {\r\n    this.destroyed = false;\r\n  }\r\n  disconnectedCallback() {\r\n    for (const view of this.views) {\r\n      lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\r\n      view._destroy();\r\n    }\r\n    // Release swipe back gesture and transition.\r\n    if (this.gesture) {\r\n      this.gesture.destroy();\r\n      this.gesture = undefined;\r\n    }\r\n    this.transInstr.length = 0;\r\n    this.views.length = 0;\r\n    this.destroyed = true;\r\n  }\r\n  /**\r\n   * Push a new component onto the current navigation stack. Pass any additional\r\n   * information along as an object. This additional information is accessible\r\n   * through NavParams.\r\n   *\r\n   * @param component The component to push onto the navigation stack.\r\n   * @param componentProps Any properties of the component.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  push(component, componentProps, opts, done) {\r\n    return this.insert(-1, component, componentProps, opts, done);\r\n  }\r\n  /**\r\n   * Inserts a component into the navigation stack at the specified index.\r\n   * This is useful to add a component at any point in the navigation stack.\r\n   *\r\n   * @param insertIndex The index to insert the component at in the stack.\r\n   * @param component The component to insert into the navigation stack.\r\n   * @param componentProps Any properties of the component.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  insert(insertIndex, component, componentProps, opts, done) {\r\n    return this.insertPages(insertIndex, [{ component, componentProps }], opts, done);\r\n  }\r\n  /**\r\n   * Inserts an array of components into the navigation stack at the specified index.\r\n   * The last component in the array will become instantiated as a view, and animate\r\n   * in to become the active view.\r\n   *\r\n   * @param insertIndex The index to insert the components at in the stack.\r\n   * @param insertComponents The components to insert into the navigation stack.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  insertPages(insertIndex, insertComponents, opts, done) {\r\n    return this.queueTrns({\r\n      insertStart: insertIndex,\r\n      insertViews: insertComponents,\r\n      opts,\r\n    }, done);\r\n  }\r\n  /**\r\n   * Pop a component off of the navigation stack. Navigates back from the current\r\n   * component.\r\n   *\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  pop(opts, done) {\r\n    return this.removeIndex(-1, 1, opts, done);\r\n  }\r\n  /**\r\n   * Pop to a specific index in the navigation stack.\r\n   *\r\n   * @param indexOrViewCtrl The index or view controller to pop to.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  popTo(indexOrViewCtrl, opts, done) {\r\n    const ti = {\r\n      removeStart: -1,\r\n      removeCount: -1,\r\n      opts,\r\n    };\r\n    if (typeof indexOrViewCtrl === 'object' && indexOrViewCtrl.component) {\r\n      ti.removeView = indexOrViewCtrl;\r\n      ti.removeStart = 1;\r\n    }\r\n    else if (typeof indexOrViewCtrl === 'number') {\r\n      ti.removeStart = indexOrViewCtrl + 1;\r\n    }\r\n    return this.queueTrns(ti, done);\r\n  }\r\n  /**\r\n   * Navigate back to the root of the stack, no matter how far back that is.\r\n   *\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  popToRoot(opts, done) {\r\n    return this.removeIndex(1, -1, opts, done);\r\n  }\r\n  /**\r\n   * Removes a component from the navigation stack at the specified index.\r\n   *\r\n   * @param startIndex The number to begin removal at.\r\n   * @param removeCount The number of components to remove.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  removeIndex(startIndex, removeCount = 1, opts, done) {\r\n    return this.queueTrns({\r\n      removeStart: startIndex,\r\n      removeCount,\r\n      opts,\r\n    }, done);\r\n  }\r\n  /**\r\n   * Set the root for the current navigation stack to a component.\r\n   *\r\n   * @param component The component to set as the root of the navigation stack.\r\n   * @param componentProps Any properties of the component.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  setRoot(component, componentProps, opts, done) {\r\n    return this.setPages([{ component, componentProps }], opts, done);\r\n  }\r\n  /**\r\n   * Set the views of the current navigation stack and navigate to the last view.\r\n   * By default animations are disabled, but they can be enabled by passing options\r\n   * to the navigation controller. Navigation parameters can also be passed to the\r\n   * individual pages in the array.\r\n   *\r\n   * @param views The list of views to set as the navigation stack.\r\n   * @param opts The navigation options.\r\n   * @param done The transition complete function.\r\n   */\r\n  setPages(views, opts, done) {\r\n    opts !== null && opts !== void 0 ? opts : (opts = {});\r\n    // if animation wasn't set to true then default it to NOT animate\r\n    if (opts.animated !== true) {\r\n      opts.animated = false;\r\n    }\r\n    return this.queueTrns({\r\n      insertStart: 0,\r\n      insertViews: views,\r\n      removeStart: 0,\r\n      removeCount: -1,\r\n      opts,\r\n    }, done);\r\n  }\r\n  /**\r\n   * Called by the router to update the view.\r\n   *\r\n   * @param id The component tag.\r\n   * @param params The component params.\r\n   * @param direction A direction hint.\r\n   * @param animation an AnimationBuilder.\r\n   *\r\n   * @return the status.\r\n   * @internal\r\n   */\r\n  setRouteId(id, params, direction, animation) {\r\n    const active = this.getActiveSync();\r\n    if (matches(active, id, params)) {\r\n      return Promise.resolve({\r\n        changed: false,\r\n        element: active.element,\r\n      });\r\n    }\r\n    let resolve;\r\n    const promise = new Promise((r) => (resolve = r));\r\n    let finish;\r\n    const commonOpts = {\r\n      updateURL: false,\r\n      viewIsReady: (enteringEl) => {\r\n        let mark;\r\n        const p = new Promise((r) => (mark = r));\r\n        resolve({\r\n          changed: true,\r\n          element: enteringEl,\r\n          markVisible: async () => {\r\n            mark();\r\n            await finish;\r\n          },\r\n        });\r\n        return p;\r\n      },\r\n    };\r\n    if (direction === 'root') {\r\n      finish = this.setRoot(id, params, commonOpts);\r\n    }\r\n    else {\r\n      // Look for a view matching the target in the view stack.\r\n      const viewController = this.views.find((v) => matches(v, id, params));\r\n      if (viewController) {\r\n        finish = this.popTo(viewController, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animationBuilder: animation }));\r\n      }\r\n      else if (direction === 'forward') {\r\n        finish = this.push(id, params, Object.assign(Object.assign({}, commonOpts), { animationBuilder: animation }));\r\n      }\r\n      else if (direction === 'back') {\r\n        finish = this.setRoot(id, params, Object.assign(Object.assign({}, commonOpts), { direction: 'back', animated: true, animationBuilder: animation }));\r\n      }\r\n    }\r\n    return promise;\r\n  }\r\n  /**\r\n   * Called by <ion-router> to retrieve the current component.\r\n   *\r\n   * @internal\r\n   */\r\n  async getRouteId() {\r\n    const active = this.getActiveSync();\r\n    if (active) {\r\n      return {\r\n        id: active.element.tagName,\r\n        params: active.params,\r\n        element: active.element,\r\n      };\r\n    }\r\n    return undefined;\r\n  }\r\n  /**\r\n   * Get the active view.\r\n   */\r\n  async getActive() {\r\n    return this.getActiveSync();\r\n  }\r\n  /**\r\n   * Get the view at the specified index.\r\n   *\r\n   * @param index The index of the view.\r\n   */\r\n  async getByIndex(index) {\r\n    return this.views[index];\r\n  }\r\n  /**\r\n   * Returns `true` if the current view can go back.\r\n   *\r\n   * @param view The view to check.\r\n   */\r\n  async canGoBack(view) {\r\n    return this.canGoBackSync(view);\r\n  }\r\n  /**\r\n   * Get the previous view.\r\n   *\r\n   * @param view The view to get.\r\n   */\r\n  async getPrevious(view) {\r\n    return this.getPreviousSync(view);\r\n  }\r\n  getLength() {\r\n    return this.views.length;\r\n  }\r\n  getActiveSync() {\r\n    return this.views[this.views.length - 1];\r\n  }\r\n  canGoBackSync(view = this.getActiveSync()) {\r\n    return !!(view && this.getPreviousSync(view));\r\n  }\r\n  getPreviousSync(view = this.getActiveSync()) {\r\n    if (!view) {\r\n      return undefined;\r\n    }\r\n    const views = this.views;\r\n    const index = views.indexOf(view);\r\n    return index > 0 ? views[index - 1] : undefined;\r\n  }\r\n  /**\r\n   * Adds a navigation stack change to the queue and schedules it to run.\r\n   *\r\n   * @returns Whether the transition succeeds.\r\n   */\r\n  async queueTrns(ti, done) {\r\n    var _a, _b;\r\n    if (this.isTransitioning && ((_a = ti.opts) === null || _a === void 0 ? void 0 : _a.skipIfBusy)) {\r\n      return false;\r\n    }\r\n    const promise = new Promise((resolve, reject) => {\r\n      ti.resolve = resolve;\r\n      ti.reject = reject;\r\n    });\r\n    ti.done = done;\r\n    /**\r\n     * If using router, check to see if navigation hooks\r\n     * will allow us to perform this transition. This\r\n     * is required in order for hooks to work with\r\n     * the ion-back-button or swipe to go back.\r\n     */\r\n    if (ti.opts && ti.opts.updateURL !== false && this.useRouter) {\r\n      const router = document.querySelector('ion-router');\r\n      if (router) {\r\n        const canTransition = await router.canTransition();\r\n        if (canTransition === false) {\r\n          return false;\r\n        }\r\n        if (typeof canTransition === 'string') {\r\n          router.push(canTransition, ti.opts.direction || 'back');\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    // Normalize empty\r\n    if (((_b = ti.insertViews) === null || _b === void 0 ? void 0 : _b.length) === 0) {\r\n      ti.insertViews = undefined;\r\n    }\r\n    // Enqueue transition instruction\r\n    this.transInstr.push(ti);\r\n    // if there isn't a transition already happening\r\n    // then this will kick off this transition\r\n    this.nextTrns();\r\n    return promise;\r\n  }\r\n  success(result, ti) {\r\n    if (this.destroyed) {\r\n      this.fireError('nav controller was destroyed', ti);\r\n      return;\r\n    }\r\n    if (ti.done) {\r\n      ti.done(result.hasCompleted, result.requiresTransition, result.enteringView, result.leavingView, result.direction);\r\n    }\r\n    ti.resolve(result.hasCompleted);\r\n    if (ti.opts.updateURL !== false && this.useRouter) {\r\n      const router = document.querySelector('ion-router');\r\n      if (router) {\r\n        const direction = result.direction === 'back' ? 'back' : 'forward';\r\n        router.navChanged(direction);\r\n      }\r\n    }\r\n  }\r\n  failed(rejectReason, ti) {\r\n    if (this.destroyed) {\r\n      this.fireError('nav controller was destroyed', ti);\r\n      return;\r\n    }\r\n    this.transInstr.length = 0;\r\n    this.fireError(rejectReason, ti);\r\n  }\r\n  fireError(rejectReason, ti) {\r\n    if (ti.done) {\r\n      ti.done(false, false, rejectReason);\r\n    }\r\n    if (ti.reject && !this.destroyed) {\r\n      ti.reject(rejectReason);\r\n    }\r\n    else {\r\n      ti.resolve(false);\r\n    }\r\n  }\r\n  /**\r\n   * Consumes the next transition in the queue.\r\n   *\r\n   * @returns whether the transition is executed.\r\n   */\r\n  nextTrns() {\r\n    // this is the framework's bread 'n butta function\r\n    // only one transition is allowed at any given time\r\n    if (this.isTransitioning) {\r\n      return false;\r\n    }\r\n    // there is no transition happening right now, executes the next instructions.\r\n    const ti = this.transInstr.shift();\r\n    if (!ti) {\r\n      return false;\r\n    }\r\n    this.runTransition(ti);\r\n    return true;\r\n  }\r\n  /** Executes all the transition instruction from the queue. */\r\n  async runTransition(ti) {\r\n    try {\r\n      // set that this nav is actively transitioning\r\n      this.ionNavWillChange.emit();\r\n      this.isTransitioning = true;\r\n      this.prepareTI(ti);\r\n      const leavingView = this.getActiveSync();\r\n      const enteringView = this.getEnteringView(ti, leavingView);\r\n      if (!leavingView && !enteringView) {\r\n        throw new Error('no views in the stack to be removed');\r\n      }\r\n      if (enteringView && enteringView.state === VIEW_STATE_NEW) {\r\n        await enteringView.init(this.el);\r\n      }\r\n      this.postViewInit(enteringView, leavingView, ti);\r\n      // Needs transition?\r\n      const requiresTransition = (ti.enteringRequiresTransition || ti.leavingRequiresTransition) && enteringView !== leavingView;\r\n      if (requiresTransition && ti.opts && leavingView) {\r\n        const isBackDirection = ti.opts.direction === 'back';\r\n        /**\r\n         * If heading back, use the entering page's animation\r\n         * unless otherwise specified by the developer.\r\n         */\r\n        if (isBackDirection) {\r\n          ti.opts.animationBuilder = ti.opts.animationBuilder || (enteringView === null || enteringView === void 0 ? void 0 : enteringView.animationBuilder);\r\n        }\r\n        leavingView.animationBuilder = ti.opts.animationBuilder;\r\n      }\r\n      let result;\r\n      if (requiresTransition) {\r\n        result = await this.transition(enteringView, leavingView, ti);\r\n      }\r\n      else {\r\n        // transition is not required, so we are already done!\r\n        // they're inserting/removing the views somewhere in the middle or\r\n        // beginning, so visually nothing needs to animate/transition\r\n        // resolve immediately because there's no animation that's happening\r\n        result = {\r\n          hasCompleted: true,\r\n          requiresTransition: false,\r\n        };\r\n      }\r\n      this.success(result, ti);\r\n      this.ionNavDidChange.emit();\r\n    }\r\n    catch (rejectReason) {\r\n      this.failed(rejectReason, ti);\r\n    }\r\n    this.isTransitioning = false;\r\n    this.nextTrns();\r\n  }\r\n  prepareTI(ti) {\r\n    var _a, _b;\r\n    var _c;\r\n    const viewsLength = this.views.length;\r\n    (_a = ti.opts) !== null && _a !== void 0 ? _a : (ti.opts = {});\r\n    (_b = (_c = ti.opts).delegate) !== null && _b !== void 0 ? _b : (_c.delegate = this.delegate);\r\n    if (ti.removeView !== undefined) {\r\n      assert(ti.removeStart !== undefined, 'removeView needs removeStart');\r\n      assert(ti.removeCount !== undefined, 'removeView needs removeCount');\r\n      const index = this.views.indexOf(ti.removeView);\r\n      if (index < 0) {\r\n        throw new Error('removeView was not found');\r\n      }\r\n      ti.removeStart += index;\r\n    }\r\n    if (ti.removeStart !== undefined) {\r\n      if (ti.removeStart < 0) {\r\n        ti.removeStart = viewsLength - 1;\r\n      }\r\n      if (ti.removeCount < 0) {\r\n        ti.removeCount = viewsLength - ti.removeStart;\r\n      }\r\n      ti.leavingRequiresTransition = ti.removeCount > 0 && ti.removeStart + ti.removeCount === viewsLength;\r\n    }\r\n    if (ti.insertViews) {\r\n      // allow -1 to be passed in to auto push it on the end\r\n      // and clean up the index if it's larger then the size of the stack\r\n      if (ti.insertStart < 0 || ti.insertStart > viewsLength) {\r\n        ti.insertStart = viewsLength;\r\n      }\r\n      ti.enteringRequiresTransition = ti.insertStart === viewsLength;\r\n    }\r\n    const insertViews = ti.insertViews;\r\n    if (!insertViews) {\r\n      return;\r\n    }\r\n    assert(insertViews.length > 0, 'length can not be zero');\r\n    const viewControllers = convertToViews(insertViews);\r\n    if (viewControllers.length === 0) {\r\n      throw new Error('invalid views to insert');\r\n    }\r\n    // Check all the inserted view are correct\r\n    for (const view of viewControllers) {\r\n      view.delegate = ti.opts.delegate;\r\n      const nav = view.nav;\r\n      if (nav && nav !== this) {\r\n        throw new Error('inserted view was already inserted');\r\n      }\r\n      if (view.state === VIEW_STATE_DESTROYED) {\r\n        throw new Error('inserted view was already destroyed');\r\n      }\r\n    }\r\n    ti.insertViews = viewControllers;\r\n  }\r\n  /**\r\n   * Returns the view that will be entered considering the transition instructions.\r\n   *\r\n   * @param ti The instructions.\r\n   * @param leavingView The view being left or undefined if none.\r\n   *\r\n   * @returns The view that will be entered, undefined if none.\r\n   */\r\n  getEnteringView(ti, leavingView) {\r\n    // The last inserted view will be entered when view are inserted.\r\n    const insertViews = ti.insertViews;\r\n    if (insertViews !== undefined) {\r\n      return insertViews[insertViews.length - 1];\r\n    }\r\n    // When views are deleted, we will enter the last view that is not removed and not the view being left.\r\n    const removeStart = ti.removeStart;\r\n    if (removeStart !== undefined) {\r\n      const views = this.views;\r\n      const removeEnd = removeStart + ti.removeCount;\r\n      for (let i = views.length - 1; i >= 0; i--) {\r\n        const view = views[i];\r\n        if ((i < removeStart || i >= removeEnd) && view !== leavingView) {\r\n          return view;\r\n        }\r\n      }\r\n    }\r\n    return undefined;\r\n  }\r\n  /**\r\n   * Adds and Removes the views from the navigation stack.\r\n   *\r\n   * @param enteringView The view being entered.\r\n   * @param leavingView The view being left.\r\n   * @param ti The instructions.\r\n   */\r\n  postViewInit(enteringView, leavingView, ti) {\r\n    var _a, _b, _c;\r\n    assert(leavingView || enteringView, 'Both leavingView and enteringView are null');\r\n    assert(ti.resolve, 'resolve must be valid');\r\n    assert(ti.reject, 'reject must be valid');\r\n    // Compute the views to remove.\r\n    const opts = ti.opts;\r\n    const { insertViews, removeStart, removeCount } = ti;\r\n    /** Records the view to destroy */\r\n    let destroyQueue;\r\n    // there are views to remove\r\n    if (removeStart !== undefined && removeCount !== undefined) {\r\n      assert(removeStart >= 0, 'removeStart can not be negative');\r\n      assert(removeCount >= 0, 'removeCount can not be negative');\r\n      destroyQueue = [];\r\n      for (let i = removeStart; i < removeStart + removeCount; i++) {\r\n        const view = this.views[i];\r\n        if (view && view !== enteringView && view !== leavingView) {\r\n          destroyQueue.push(view);\r\n        }\r\n      }\r\n      // default the direction to \"back\"\r\n      (_a = opts.direction) !== null && _a !== void 0 ? _a : (opts.direction = 'back');\r\n    }\r\n    const finalNumViews = this.views.length + ((_b = insertViews === null || insertViews === void 0 ? void 0 : insertViews.length) !== null && _b !== void 0 ? _b : 0) - (removeCount !== null && removeCount !== void 0 ? removeCount : 0);\r\n    assert(finalNumViews >= 0, 'final balance can not be negative');\r\n    if (finalNumViews === 0) {\r\n      console.warn(`You can't remove all the pages in the navigation stack. nav.pop() is probably called too many times.`, this, this.el);\r\n      throw new Error('navigation stack needs at least one root page');\r\n    }\r\n    // At this point the transition can not be rejected, any throw should be an error\r\n    // Insert the new views in the stack.\r\n    if (insertViews) {\r\n      // add the views to the\r\n      let insertIndex = ti.insertStart;\r\n      for (const view of insertViews) {\r\n        this.insertViewAt(view, insertIndex);\r\n        insertIndex++;\r\n      }\r\n      if (ti.enteringRequiresTransition) {\r\n        // default to forward if not already set\r\n        (_c = opts.direction) !== null && _c !== void 0 ? _c : (opts.direction = 'forward');\r\n      }\r\n    }\r\n    // if the views to be removed are in the beginning or middle\r\n    // and there is not a view that needs to visually transition out\r\n    // then just destroy them and don't transition anything\r\n    // batch all of lifecycles together\r\n    // let's make sure, callbacks are zoned\r\n    if (destroyQueue && destroyQueue.length > 0) {\r\n      for (const view of destroyQueue) {\r\n        lifecycle(view.element, LIFECYCLE_WILL_LEAVE);\r\n        lifecycle(view.element, LIFECYCLE_DID_LEAVE);\r\n        lifecycle(view.element, LIFECYCLE_WILL_UNLOAD);\r\n      }\r\n      // once all lifecycle events has been delivered, we can safely detroy the views\r\n      for (const view of destroyQueue) {\r\n        this.destroyView(view);\r\n      }\r\n    }\r\n  }\r\n  async transition(enteringView, leavingView, ti) {\r\n    // we should animate (duration > 0) if the pushed page is not the first one (startup)\r\n    // or if it is a portal (modal, actionsheet, etc.)\r\n    const opts = ti.opts;\r\n    const progressCallback = opts.progressAnimation ? (ani) => (this.sbAni = ani) : undefined;\r\n    const mode = getIonMode(this);\r\n    const enteringEl = enteringView.element;\r\n    const leavingEl = leavingView && leavingView.element;\r\n    const animationOpts = Object.assign(Object.assign({ mode, showGoBack: this.canGoBackSync(enteringView), baseEl: this.el, progressCallback, animated: this.animated && config.getBoolean('animated', true), enteringEl,\r\n      leavingEl }, opts), { animationBuilder: opts.animationBuilder || this.animation || config.get('navAnimation') });\r\n    const { hasCompleted } = await transition(animationOpts);\r\n    return this.transitionFinish(hasCompleted, enteringView, leavingView, opts);\r\n  }\r\n  transitionFinish(hasCompleted, enteringView, leavingView, opts) {\r\n    /**\r\n     * If the transition did not complete, the leavingView will still be the active\r\n     * view on the stack. Otherwise unmount all the views after the enteringView.\r\n     */\r\n    const activeView = hasCompleted ? enteringView : leavingView;\r\n    if (activeView) {\r\n      this.unmountInactiveViews(activeView);\r\n    }\r\n    return {\r\n      hasCompleted,\r\n      requiresTransition: true,\r\n      enteringView,\r\n      leavingView,\r\n      direction: opts.direction,\r\n    };\r\n  }\r\n  /**\r\n   * Inserts a view at the specified index.\r\n   *\r\n   * When the view already is in the stack it will be moved to the new position.\r\n   *\r\n   * @param view The view to insert.\r\n   * @param index The index where to insert the view.\r\n   */\r\n  insertViewAt(view, index) {\r\n    const views = this.views;\r\n    const existingIndex = views.indexOf(view);\r\n    if (existingIndex > -1) {\r\n      assert(view.nav === this, 'view is not part of the nav');\r\n      // The view already in the stack, removes it.\r\n      views.splice(existingIndex, 1);\r\n      // and add it back at the requested index.\r\n      views.splice(index, 0, view);\r\n    }\r\n    else {\r\n      assert(!view.nav, 'nav is used');\r\n      // this is a new view to add to the stack\r\n      // create the new entering view\r\n      view.nav = this;\r\n      views.splice(index, 0, view);\r\n    }\r\n  }\r\n  /**\r\n   * Removes a view from the stack.\r\n   *\r\n   * @param view The view to remove.\r\n   */\r\n  removeView(view) {\r\n    assert(view.state === VIEW_STATE_ATTACHED || view.state === VIEW_STATE_DESTROYED, 'view state should be loaded or destroyed');\r\n    const views = this.views;\r\n    const index = views.indexOf(view);\r\n    assert(index > -1, 'view must be part of the stack');\r\n    if (index >= 0) {\r\n      views.splice(index, 1);\r\n    }\r\n  }\r\n  destroyView(view) {\r\n    view._destroy();\r\n    this.removeView(view);\r\n  }\r\n  /**\r\n   * Unmounts all inactive views after the specified active view.\r\n   *\r\n   * DOM WRITE\r\n   *\r\n   * @param activeView The view that is actively visible in the stack. Used to calculate which views to unmount.\r\n   */\r\n  unmountInactiveViews(activeView) {\r\n    // ok, cleanup time!! Destroy all of the views that are\r\n    // INACTIVE and come after the active view\r\n    // only do this if the views exist, though\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n    const views = this.views;\r\n    const activeViewIndex = views.indexOf(activeView);\r\n    for (let i = views.length - 1; i >= 0; i--) {\r\n      const view = views[i];\r\n      /**\r\n       * When inserting multiple views via insertPages\r\n       * the last page will be transitioned to, but the\r\n       * others will not be. As a result, a DOM element\r\n       * will only be created for the last page inserted.\r\n       * As a result, it is possible to have views in the\r\n       * stack that do not have `view.element` yet.\r\n       */\r\n      const element = view.element;\r\n      if (element) {\r\n        if (i > activeViewIndex) {\r\n          // this view comes after the active view\r\n          // let's unload it\r\n          lifecycle(element, LIFECYCLE_WILL_UNLOAD);\r\n          this.destroyView(view);\r\n        }\r\n        else if (i < activeViewIndex) {\r\n          // this view comes before the active view\r\n          // and it is not a portal then ensure it is hidden\r\n          setPageHidden(element, true);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  canStart() {\r\n    return (!!this.swipeGesture &&\r\n      !this.isTransitioning &&\r\n      this.transInstr.length === 0 &&\r\n      this.animationEnabled &&\r\n      this.canGoBackSync());\r\n  }\r\n  onStart() {\r\n    this.pop({ direction: 'back', progressAnimation: true });\r\n  }\r\n  onMove(stepValue) {\r\n    if (this.sbAni) {\r\n      this.sbAni.progressStep(stepValue);\r\n    }\r\n  }\r\n  onEnd(shouldComplete, stepValue, dur) {\r\n    if (this.sbAni) {\r\n      this.animationEnabled = false;\r\n      this.sbAni.onFinish(() => {\r\n        this.animationEnabled = true;\r\n      }, { oneTimeCallback: true });\r\n      // Account for rounding errors in JS\r\n      let newStepValue = shouldComplete ? -0.001 : 0.001;\r\n      /**\r\n       * Animation will be reversed here, so need to\r\n       * reverse the easing curve as well\r\n       *\r\n       * Additionally, we need to account for the time relative\r\n       * to the new easing curve, as `stepValue` is going to be given\r\n       * in terms of a linear curve.\r\n       */\r\n      if (!shouldComplete) {\r\n        this.sbAni.easing('cubic-bezier(1, 0, 0.68, 0.28)');\r\n        newStepValue += getTimeGivenProgression([0, 0], [1, 0], [0.68, 0.28], [1, 1], stepValue)[0];\r\n      }\r\n      else {\r\n        newStepValue += getTimeGivenProgression([0, 0], [0.32, 0.72], [0, 1], [1, 1], stepValue)[0];\r\n      }\r\n      this.sbAni.progressEnd(shouldComplete ? 1 : 0, newStepValue, dur);\r\n    }\r\n  }\r\n  render() {\r\n    return h(\"slot\", null);\r\n  }\r\n  get el() { return getElement(this); }\r\n  static get watchers() { return {\r\n    \"swipeGesture\": [\"swipeGestureChanged\"],\r\n    \"root\": [\"rootChanged\"]\r\n  }; }\r\n};\r\nNav.style = navCss;\r\n\r\nconst navLink = (el, routerDirection, component, componentProps, routerAnimation) => {\r\n  const nav = el.closest('ion-nav');\r\n  if (nav) {\r\n    if (routerDirection === 'forward') {\r\n      if (component !== undefined) {\r\n        return nav.push(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\r\n      }\r\n    }\r\n    else if (routerDirection === 'root') {\r\n      if (component !== undefined) {\r\n        return nav.setRoot(component, componentProps, { skipIfBusy: true, animationBuilder: routerAnimation });\r\n      }\r\n    }\r\n    else if (routerDirection === 'back') {\r\n      return nav.pop({ skipIfBusy: true, animationBuilder: routerAnimation });\r\n    }\r\n  }\r\n  return Promise.resolve(false);\r\n};\r\n\r\nconst NavLink = class {\r\n  constructor(hostRef) {\r\n    registerInstance(this, hostRef);\r\n    /**\r\n     * The transition direction when navigating to another page.\r\n     */\r\n    this.routerDirection = 'forward';\r\n    this.onClick = () => {\r\n      return navLink(this.el, this.routerDirection, this.component, this.componentProps, this.routerAnimation);\r\n    };\r\n  }\r\n  render() {\r\n    return h(Host, { onClick: this.onClick });\r\n  }\r\n  get el() { return getElement(this); }\r\n};\r\n\r\nexport { Nav as ion_nav, NavLink as ion_nav_link };\r\n"],"names":["r","registerInstance","e","createEvent","h","i","getElement","H","Host","b","getIonMode","c","config","g","getTimeGivenProgression","n","assert","s","shallowEqualStringMap","l","lifecycle","t","transition","setPageHidden","d","LIFECYCLE_WILL_UNLOAD","LIFECYCLE_WILL_LEAVE","LIFECYCLE_DID_LEAVE","a","attachComponent","VIEW_STATE_NEW","VIEW_STATE_ATTACHED","VIEW_STATE_DESTROYED","ViewController","constructor","component","params","state","init","container","element","delegate","_destroy","removeViewFromDom","parentElement","remove","nav","undefined","matches","view","id","convertToView","page","convertToViews","pages","map","componentProps","filter","v","navCss","Nav","hostRef","ionNavWillLoad","ionNavWillChange","ionNavDidChange","transInstr","animationEnabled","useRouter","isTransitioning","destroyed","views","animated","swipeGestureChanged","gesture","enable","swipeGesture","rootChanged","root","setRoot","rootParams","componentWillLoad","document","querySelector","el","closest","mode","getBoolean","emit","componentDidLoad","createSwipeBackGesture","canStart","bind","onStart","onMove","onEnd","connectedCallback","disconnectedCallback","destroy","length","push","opts","done","insert","insertIndex","insertPages","insertComponents","queueTrns","insertStart","insertViews","pop","removeIndex","popTo","indexOrViewCtrl","ti","removeStart","removeCount","removeView","popToRoot","startIndex","setPages","setRouteId","direction","animation","active","getActiveSync","Promise","resolve","changed","promise","finish","commonOpts","updateURL","viewIsReady","enteringEl","mark","p","markVisible","viewController","find","Object","assign","animationBuilder","getRouteId","tagName","getActive","getByIndex","index","canGoBack","canGoBackSync","getPrevious","getPreviousSync","getLength","indexOf","_a","_b","skipIfBusy","reject","router","canTransition","nextTrns","success","result","fireError","hasCompleted","requiresTransition","enteringView","leavingView","navChanged","failed","rejectReason","shift","runTransition","prepareTI","getEnteringView","Error","postViewInit","enteringRequiresTransition","leavingRequiresTransition","isBackDirection","_c","viewsLength","viewControllers","removeEnd","destroyQueue","finalNumViews","console","warn","insertViewAt","destroyView","progressCallback","progressAnimation","ani","sbAni","leavingEl","animationOpts","showGoBack","baseEl","get","transitionFinish","activeView","unmountInactiveViews","existingIndex","splice","activeViewIndex","stepValue","progressStep","shouldComplete","dur","onFinish","oneTimeCallback","newStepValue","easing","progressEnd","render","watchers","style","navLink","routerDirection","routerAnimation","NavLink","onClick","ion_nav","ion_nav_link"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}